from tkinter import *
from PIL import Image
import random
from numpy import array
main = Tk()
main.title("Drawing Images")
screen_sizex = 1000
screen_sizey =1000
work = True
main.geometry("2000x1000")
maincanvas = Canvas(main, bg="white", height=screen_sizex, width=screen_sizey)
maincanvas.place(x=0, y=0)
google = PhotoImage(file="Vanilla Cupcake.png", width=screen_sizex, height=screen_sizey)
boogle = maincanvas.create_image(screen_sizex/2, screen_sizey/2, image=google)
def file():
    print("Learn how to upload files")


def image_one():
    examps = maincanvas.create_image(random.randint(300, screen_sizex), random.randint(300, screen_sizex), image=google)
    print("Learn how to upload files")

choose_file = Button(main, fg="Red", bg="Green", text="Choose File", command=file)
choose_file.place(x=0, y=0)
im = Image.open('Underwater1.jpg', 'r')
rbg_im = im.convert('RGB')
pixel_values = list(im.getdata())
pixel_len = len(pixel_values)
width, height = im.size
pixelstuff = 0


pixel_values = list(im.getdata())
pixel_len = len(pixel_values)
print(pixel_len)
"""""""""
for i in pixel_values:
    pixelstuff = pixelstuff + pixel_values[i]
pixelstuff = pixelstuff / pixel_len
"""""
for n, i in enumerate(pixel_values):
    if i == (4, 100, 112):
        pixel_values[n] = (0, 250, 0)

img_out = Image.new(im.mode, im.size)
print(pixel_values)
img_out.putdata(pixel_values)
img_out.show()


"""""""""
h = 1
listss = []
w = 1
while h < height:
    while w < width:
        r, g, b = rbg_im.getpixel((w, h))
        if r == 0:
        print(r, g, b)
        listss.append((r, g, b))
        w = w + 1
    h = h + 1

width, height = im.size
pixel_values = list(im.getdata())
pixel_len = len(pixel_values)
print(pixel_values)
print(pixel_len)

for i in range(pixel_len):
    if not pixel_values[i] == (255, 255, 255, 0):
        pixel_values[i] = (0, 0, 0, 0)
print(pixel_values)

img = Image.new(pixel_values, im.size)
img.load()
img.show()
"""""""""""






first_image = Button(main, fg="Red", bg="Green", text="Image Example", command=image_one)
first_image.place(x=0, y=0)


main.mainloop()



 #Purose: Figue out RPG values of entire image and the RPG values different from surrounding image get a black line, the rest get a white pixel. Thus making an image of the face in drawing and black and white
