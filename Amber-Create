import pygame
import random
from pygame.locals import *
pygame.init()
yscreen = 1000
xscreen = 1000
screen = pygame.display.set_mode((xscreen, yscreen))
pygame.display.set_caption("Adventure Seeker")
White = (250, 250, 250)
Red = (250, 10, 10)
Day = (135, 206, 235)
Night = (25, 25, 112)
Times=(Day, Night)
Time=random.choice(Times)
screen.fill(Time)
working = True
yposition = yscreen / 2
xposition = xscreen / 2
setting = "residential"
boughthouse = 0
Inventory = []
InventoryAmount = len(Inventory)
money = 100000000000  # start currency
civ_bank = 100000000000
magiccards = 10
population = 30
populationhealth = 100
boughthouse = 0  # 0 will mean false, 1 means true
pos = (-1, -2)
spritework=0
mainavatar = pygame.image.load ("Vanilla Cupcake.png")
war = "Not in War"
warswon = 0
warslost = 0
art_piece = 0
avatars_list = ("Vanilla Cupcake.png", "Chocolate Cupcake.png", "Chest.png", "HouseIcon.png", "Bed.png")
cost = 0
militarypower = 0
ball_x = 0
ball_y = 0
govs = ["Oligarchy", "Republic", "Monarchy", "Democracy", "Dictatorship", "Communism", "Anarchy", "Theocracy"]
govtype = random.choice(govs)

def magicalpower():
    global ball_y, ball_x, weapony, weaponx, money, reveal_weapon, limit_magic
    limit_magic = limit_magic - 1
    while limit_magic >0 and ball_y >= 1 or (ball_y != weapony and ball_x != weaponx):
        time.clock()
        ball_y = ball_y + 10
        ball_x = ball_x + 10
    if ball_x == weapony and ball_y == weapony:
        money = money + 1
        reveal_weapon = 0
    if ball_y <= 0:
        limit_magic = limit_magic + 1
        #remove appearance of ball
    #have the blacksmith ball move up until touch
def Arrows():
    global yposition, xposition, Time
    pressed = pygame.key.get_pressed ()
    if pressed[pygame.K_DOWN]:
        yposition=yposition+10
    if pressed[pygame.K_UP]:
        yposition=yposition-10
    if pressed[pygame.K_RIGHT]:
        xposition=xposition+10
    if pressed[pygame.K_LEFT]:
        xposition=xposition-10
    makeground()
    screen.blit (mainavatar, (xposition, yposition))
    if setting == "Job":
        if pressed[pygame.K_SPACE]:
            ball_x = xposition
            ball_y = yscreen - 30
            magicalpower()

spriteposx=50
spriteposy=60

def War():
    global warslost, warswon, militarypower,war
    if war == "Declared":
        Enemies = ["Ottoman Empire", "China", "West Europe", "Byzantines", "Incas"]
        Enemy = random.choice(Enemies)
        EnemyPower = random.randint (1, 100)
        EnemyHealth = 1000 + EnemyPower
        YourAdvantage = militarypower - EnemyPower
        YourHealth = 1000 + YourAdvantage
        EnemyAttack = 100 + EnemyPower
        YourAttack = 100 + YourAdvantage
        war = "In progress"
    if war == "In progress":
        if (xscreen * 3 / 6 + 75 < pos[0] or pos[0] < xscreen * 3 / 6 - 75) and (280 > pos[1] > 100):
            EnemyHealth = EnemyHealth - YourAttack
            YourHealth = YourHealth - EnemyAttack

    if YourHealth <= 0 and EnemyHealth >= 0:
        warslost = warslost + 1
        war = "Lost"
    if YourHealth >= 0 and EnemyHealth <= 0:
        warswon = warswon + 1
        war = "Won"

def makeground():
    global setting, xscreen, oldsetting, font, govtype
    font = pygame.font.SysFont ('Arial',
                                25)  # https://stackoverflow.com/questions/19117062/how-to-add-text-into-a-pygame-rectangle
    if setting == "residential":
        screen.fill (Time)
        House1 = pygame.image.load ("houseblue.png")
        screen.blit (House1, (xscreen / 6 - 200, 60))
        House2 = pygame.image.load ("houseblue.png")
        screen.blit (House2, (xscreen * 2 / 6 - 200, 60))
        House3 = pygame.image.load ("houseblue.png")
        screen.blit (House3, (xscreen * 5 / 6 - 200, 60))
        House4 = pygame.image.load ("houseblue.png")
        screen.blit (House4, (xscreen * 4 / 6 - 200, 60))
        AvatarHouse = pygame.image.load ("houseblue.png")
        screen.blit (AvatarHouse, (xscreen * 3 / 6 - 200, 60))
        """""""""
        Villager1 = pygame.image.load ("Blue.png")
        screen.blit (Villager1, (50, 200))
        Villager2 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager2, (50, 400))
        Villager3 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager3, (50, 300))
        Villager4 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager4, (50, 600))
        Villager5 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager5, (50, 200))
        Villager6 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager6, (50, 300))
        Villager7 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager7, (50, 260))
        Villager8 = pygame.image.load ("HouseIcon.png")
        screen.blit (Villager8, (50, 630))
        """
        arrowtomarket = pygame.draw.polygon (screen, White, (
            (xscreen - 30, yscreen / 2 - 5), (xscreen - 30, yscreen / 2 + 5), (xscreen - 10, yscreen / 2 + 5),
            (xscreen - 10, yscreen / 2 + 15), (xscreen, yscreen / 2), (xscreen - 10, yscreen / 2 - 15), (xscreen - 10,
                                                                                                         yscreen / 2 - 5)))  # https://stackoverflow.com/questions/14897071/drawing-an-arrow-in-pygame
        arrowtogov = pygame.draw.polygon (screen, White, (
            (0 + 30, yscreen / 2 - 5), (0 + 30, yscreen / 2 + 5), (0 + 10, yscreen / 2 + 5), (0 + 10, yscreen / 2 + 15),
            (0, yscreen / 2), (0 + 10, yscreen / 2 - 15), (0 + 10, yscreen / 2 - 5)))
    if setting == "government":
        screen.fill (Time)
        arrowtotown = pygame.draw.polygon (screen, White, (
            (xscreen - 30, yscreen / 2 - 5), (xscreen - 30, yscreen / 2 + 5), (xscreen - 10, yscreen / 2 + 5),
            (xscreen - 10, yscreen / 2 + 15), (xscreen, yscreen / 2), (xscreen - 10, yscreen / 2 - 15), (xscreen - 10,
                                                                                                         yscreen / 2 - 5)))  # https://stackoverflow.com/questions/14897071/drawing-an-arrow-in-pygame
        Escape = pygame.draw.rect (screen, Red, (110, 110, 50, 50))
        screen.blit(font.render("Declare War", True, White), (110, 110))
    if setting == "marketplace":
        if govtype != "communism":
            screen.fill (Time)
            localgoods = pygame.image.load ("market.png")
            screen.blit (localgoods, (xscreen-300, 5))
            Furniture = pygame.image.load ("market.png")
            screen.blit (Furniture, (xscreen-300, 200))
            Foreigngoods = pygame.image.load ("market.png")
            screen.blit (Foreigngoods, (xscreen-300, 400))
            arts = pygame.image.load ("market.png")
            screen.blit (arts, (xscreen-300, 600))
            tools = pygame.image.load ("market.png")
            screen.blit (tools, (xscreen-300, 800))
            Guide = pygame.image.load ("market.png")
            screen.blit (Guide, (0, 5))
            clothes = pygame.image.load ("market.png")
            screen.blit (clothes, (0, yscreen-280))
            arrowtoresident = pygame.draw.polygon (screen, White, (
                (0 + 30, yscreen / 2 - 5), (0 + 30, yscreen / 2 + 5), (0 + 10, yscreen / 2 + 5), (0 + 10, yscreen / 2 + 15),
                (0, yscreen / 2), (0 + 10, yscreen / 2 - 15), (0 + 10, yscreen / 2 - 5)))
            # https://stackoverflow.com/questions/14897071/drawing-an-arrow-in-pygame
    if setting == "neighborhouse":
        screen.fill (Time)
        couch = pygame.image.load ("Couch.png")
        screen.blit (couch, (100, 50))
        screen.blit (couch, (xscreen-400, 50))
        table = pygame.image.load ("Table.png")
        screen.blit (table, (xscreen /2 - 100, 300))
        fireplace = pygame.image.load ("Fireplace.png")
        screen.blit (fireplace, (yscreen - 300, yscreen - 300))
        carpet = pygame.image.load ("Carpet.png")
        screen.blit (carpet, (xscreen / 2 - 150, yscreen-300))
        chest = pygame.image.load ("Chest.png")
        screen.blit (chest, (20, yscreen-300))
        arrownothouse = pygame.draw.polygon (screen, White, (
            (xscreen /2 - 5, yscreen - 30), (xscreen /2 + 5, yscreen - 30), (xscreen /2 + 5, yscreen - 10), (xscreen /2 + 15, yscreen - 10),
            (xscreen /2 , yscreen), (xscreen /2 - 15, yscreen - 10), (xscreen /2 - 5, yscreen - 10)))
    if setting == "avatarhouse":
        screen.fill (Time)
        bed = pygame.image.load ("Bed.png")
        screen.blit (bed, (300, 400))
        arrownohome = pygame.draw.polygon (screen, White, (
            (xscreen /2 - 5, yscreen - 30), (xscreen /2 + 5, yscreen - 30), (xscreen /2 + 5, yscreen - 10), (xscreen /2 + 15, yscreen - 10),
            (xscreen /2 , yscreen), (xscreen /2 - 15, yscreen - 10), (xscreen /2 - 5, yscreen - 10)))
    if setting != "weird":
        oldsetting = setting
    if setting == "Job":
        screen.fill (Time)
    if setting != "Job":
        map_icon = pygame.draw.rect(screen, White, (xscreen-65, 10, 50, 50))
        backpack_icon = pygame.draw.rect(screen, White, (xscreen-125, 10, 50, 50))
        options_icon = pygame.draw.rect(screen, White, (xscreen-185, 10, 50, 50))
        civilization_icon = pygame.draw.rect(screen, White, (xscreen-245, 10, 50, 50))

def Job():
    global money, marketplace, setting
    print (" Blacksmith,")
    reveal_coin = 1
    reveal_weapon = 1
    lives = 3
    if reveal_coin == 0:
        coin_posx = random.randint (1, xscreen)
        coin_posy = random.randint (1, yscreen)
    if reveal_weapon == 0:
        weaponx = random.randint (1, xscreen)
        weapony = random.randint (1, yscreen)
    pygame.draw.rect (screen, Red, (xposition, yposition, 30, 30))
    if xposition == coin_posx and yposition == coin_posy and reveal_coin == 0:
        money = money + 10
    if xposition == weaponx and yposition == weapony and reveal_weapon == 0:
        lives = lives - 1
    if lives <= 0:
        setting = "marketplace"
        makeground ()

def click():
    global setting, boughthouse, money, xscreen, yscreen, Inventory, InventoryAmount, oldsetting, war, civ_bank, limit_magic, art_piece, avatar_list, mainavatar
    if setting == "residential":
        if xscreen * 3 / 6 + 75> pos[0] > xscreen * 3 / 6 - 75 and 280 > pos[1] > 100:
            #def myhousedoor(money, boughthouse): #might conv to global
            house = 1200
            if boughthouse == 0 and money>=house:
                boughthouse=1 # 0 means flase, 1 means true
                money = money-house
            #print("You have bought a house. You have" +money+ "silver coins left")
            if boughthouse == 1:
                setting = "avatarhouse"
                makeground()
        if (xscreen * 3 / 6 + 75  < pos[0] or pos[0] <xscreen * 3 / 6 - 75 ) and (280 > pos[1] > 100):
            #enterneighborhouse = input("Would you like to go into your neighbor's house?")
            #if enterneighborhouse=="yes":
            #print("Go into house.")
            print("hey")
            setting = "neighborhouse"
            makeground()
        if xscreen > pos[0] > xscreen - 30 and yscreen / 2 + 15 > pos[1] > yscreen / 2 - 15 and setting == "residential":
            setting = "marketplace"
            makeground()
        if 30 > pos[0] > 0 and yscreen / 2 + 15 > pos[1] > yscreen / 2 - 15:
            setting = "government"
            makeground()
            screen.blit(font.render("Government Body", True, (50, 255, 100)), (xscreen / 2 - 300, yscreen / 2 - 200))
    if setting == "neighborhouse":
        makeground ()
        if xscreen / 2 + 15 > pos[0] > xscreen / 2 - 15 and yscreen > pos[1] > yscreen - 30:
            setting = "residential"
            makeground ()
    if setting == "government":
        makeground()
        if xscreen > pos[0] > xscreen - 30 and yscreen / 2 + 15 > pos[1] > yscreen / 2 - 15:
            setting = "residential"
            makeground()
        while civ_bank>10000 and 110 + 50 > pos[0] > 110 and 400 + 50 > pos[1] > 400 and militarypower<100:
            cost = 10000
            civ_bank = civ_bank - cost
            militarypower = militarypower + 1
        if 110 + 50 > pos[0] > 110 and 110 + 50 > pos[1] > 110:
            war = "Declared"
            War()

    if setting == "avatarhouse":
        makeground ()
        if xscreen / 2 + 15 > pos[0] > xscreen / 2 - 15 and yscreen > pos[1] > yscreen - 30:
            setting = "residential"
            makeground ()
    if setting == "marketplace":
        if govtype != "communism":
            clothesprice = 30
            localprice = 50
            furnitureprice = 200
            Foreignprice = 75
            artprice = 20
            toolprice = 110
            if setting == "marketplace" and 30 > pos[0] > 0 and yscreen / 2 + 15 > pos[1] > yscreen / 2 - 15:
                setting = "residential"
                makeground()
            if 250 > pos[0] > 0 and yscreen > pos[1] > yscreen - 195 and money > clothesprice:
                money = money - clothesprice
                avatar = random.choice(avatars_list)
                mainavatar = pygame.image.load(avatar)
            if xscreen - 50 > pos[0] > xscreen - 300 and 800 > pos[1] > 605 and money > artprice:
                money = money - artprice
                art_piece = art_piece + 1
            if InventoryAmount < 10:
                if xscreen - 50 > pos[0] > xscreen - 300 and 400 > pos[1] > 205 and money > furnitureprice:
                    money = money - furnitureprice
                    Inventory.append ("bed")
                if 250 > pos[0] > 0 and 200 > pos[1] > 5 and money > localprice:
                    money = money - localprice
                    Inventory.append("cookie")
                if xscreen - 50 > pos[0] > xscreen - 300 and 200 > pos[1] > 60 and money > toolprice:
                    money = money - toolprice
                    Inventory.append("axe")
                if xscreen - 50 > pos[0] > xscreen - 300 and 600 > pos[1] > 405 and money > Foreignprice:
                    money = money - Foreignprice
                    Inventory.append ("Cinnamon")
            else:
                Inventory.remove(9)
                print ("gone")
            if 0 + 100 > pos[0] > 0 and 0 + 200 > pos[1] > 0:
                setting = "job"
                makeground ()
        else:
            quotes = random.randint(1,3)
            if quotes == 1:
                screen.blit (font.render ("Karl Marx-'The worker of the world has nothing to lose, but their chains' so get to work", True, (255, 0, 0)), (0, 300))
            if quotes == 2:
                screen.blit (font.render (
                    "Death is a solution to all problems. No man - no problem. Are you a problem?",
                    True, (255, 0, 0)), (0, 300))
            if quotes == 3:
                screen.blit (font.render (
                    "Communism is not love. Communism is a hammer which we  use to crush the enemy.- Mao Zedong. Take a hammer",
                    True, (255, 0, 0)), (0, 300))
                Inventory.append("hammer")
            if pos[0] < xscreen - 30:
                setting = "residential"
                makeground()

    if setting == "Job":
        print("hmm...")
        unemployment = random.randint(1, 10)
        if unemployment != 1 or govtype != "anarchy" or govtype != "communism":
            limit_magic = 3
            makeground()
            Job()
        else:
            screen.blit (font.render ("Oh no, you can't work.", True, (255, 0, 0)), (200, 300))


    if setting != "Job":
        if xscreen - 65 + 50 > pos[0] > xscreen - 65 and 60 > pos [1] > 10 or xscreen - 125 + 50 > pos[0] > \
                xscreen - 125 and 60 > pos[1] > 10 or xscreen - 185 + 50 > pos[0] > xscreen - 185 and 60 > pos[1] > 10\
                or xscreen - 245 + 50 > pos[0] > xscreen - 245 and 60 > pos[1] > 10:
            setting = "weird"
            pygame.draw.rect(screen, White, (100, 100, xscreen - 200, yscreen - 300))
            Escape = pygame.draw.rect (screen, Red, (110, 110, 30, 30))
        if xscreen - 65 + 50 > pos[0] > xscreen - 65 and 60 > pos[1] > 10:
            screen.blit(font.render("Map", True, (150, 200, 100)), (xscreen / 2, 150))
            govern = pygame.draw.rect(screen, Red, (xscreen / 2 + 200, yscreen / 2 - 100, 100, 100))
            screen.blit(font.render("Trade Center", True, (50, 255, 100)), (xscreen / 2 + 200, yscreen / 2 - 200))
            house = pygame.draw.rect(screen, Red, (xscreen / 2 - 50, yscreen / 2 - 100, 100, 100))
            screen.blit(font.render("Town", True, (50, 255, 100)), (xscreen / 2 - 50, yscreen / 2 - 200))
            tradecen = pygame.draw.rect(screen, Red, (xscreen / 2 - 300, yscreen / 2 - 100, 100, 100))
            screen.blit(font.render("Government Body", True, (50, 255, 100)), (xscreen / 2 - 300, yscreen / 2 - 200))
        if xscreen - 125 + 50 > pos[0] > xscreen - 125 and 60 > pos[1] > 10:
            screen.blit(font.render("Inventory", True, (255, 0, 0)), (400, 100))
            screen.blit(font.render(" Item amount: " + str (InventoryAmount) +
                                      " Silver Coins: " + str (money), True, (255, 45, 0)), (200, 300))
            screen.blit(font.render("Arts Bought: " + str (art_piece), True, (255, 45, 0)), (200, 350))
            invpos = 350
            for x in Inventory:
                print(x)
                invpos = invpos + 30
                screen.blit(font.render(str(x), True, (255, 45, 0)), (200, invpos))
        if xscreen - 245 + 50 > pos[0] > xscreen - 245 and 60 > pos[1] > 10:
            screen.blit(font.render("Civilization Status", True, (255, 0, 0)), (200, 100))
            screen.blit(font.render("In war: " + str(war) + " Wars won: " + str(warswon) + " Wars lost: " + str(warslost), True, (255, 0, 0)), (300, 300))

        if xscreen - 245 + 50 > pos[0] > xscreen - 245 and 60 > pos[1] > 10:
            print("options")
        if 110 + 30 > pos[0] > 110 and 110 + 30 > pos[1] > 110:
            setting = oldsetting
            makeground ()
makeground ()


while working == True:
    pygame.display.update ()
    for event in pygame.event.get ():
        if event.type == QUIT:
            working = False
            pygame.quit ()
        if event.type == pygame.KEYDOWN:
            Arrows ()
        if event.type == pygame.MOUSEBUTTONDOWN:
            #a=sprites()
            #a.clickimage()
            pos = pygame.mouse.get_pos ()
            click()

#https://openclipart.org/detail/29102/blue-sofa
